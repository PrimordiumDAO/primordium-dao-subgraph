enum ClockMode {
  blocknumber
  timestamp
}

# Represents MUSHI token holders, who can delegate their votes to participate in governance
type Member @entity {
  # The address of the member
  id: Bytes!

  # The Delegate that this member's votes are delegated to (null if not delegated at all)
  delegate: Delegate

  # This member's raw MUSHI token balance (not adjusted for decimals)
  tokenBalance: BigInt!
}

# Represents an address with MUSHI votes delegated to it.
type Delegate @entity {
  # The address of the delegate
  id: Bytes!

  # The amount of votes that are delegated to this address
  delegatedVotesBalance: BigInt!

  # A list of ProposalVote entities casted by this delegate
  proposalVotes: [ProposalVote!]! @derivedFrom(field: "delegate")

  # A list of Proposal entities that were created by this delegate
  proposalsCreated: [Proposal!]! @derivedFrom(field: "proposer")

  # A list of Member entities that have delegated their votes to this Delegate
  membersRepresented: [Member!]! @derivedFrom(field: "delegate")

  # Timestamp when the proposer role expires (or zero if not a proposer)
  proposerRoleExpiresAt: BigInt!

  # Timestamp when the canceler role expires (or zero if not a canceler)
  cancelerRoleExpiresAt: BigInt!
}

type _Schema_
  @fulltext(
    name: "proposalSearch"
    language: en
    algorithm: rank
    include: [
      {
        entity: "Proposal"
        fields: [{ name: "title" }, { name: "description" }]
      }
    ]
  )

enum ProposalState {
  Pending
  Active
  Canceled
  Defeated
  Succeeded
  Queued
  Expired
  Executed
}

# Proposals created on the Governor proxy contract
type Proposal @entity {
  # The proposal ID used to identifiy the proposal on-chain (an incrementing integer for PrimordiumDAO)
  id: Bytes!

  # The address that submitted the proposal
  proposer: Delegate!

  # True if the Delegate had the PROPOSER_ROLE() when the proposal was created.
  isProposerRole: Boolean!

  # The proposal execution's target addresses
  targets: [Bytes!]!

  # The proposal execution's transaction values
  values: [BigInt!]!

  # The proposal execution's transaction calldatas
  calldatas: [Bytes!]!

  # The corresponding signatures for each calldata
  signatures: [String!]!

  # Proposal creation block
  createdAtBlock: BigInt!

  # Proposal creation timestamp
  createdAtTimestamp: BigInt!

  # Hash of the transaction creating this proposal
  createdTransactionHash: Bytes!

  # Proposal title (from the description)
  title: String!

  # Full proposal description
  description: String!

  # Proposal voting begins
  voteStart: BigInt!

  # Proposal voting ends
  voteEnd: BigInt!

  # The unextended vote end
  originalVoteEnd: BigInt!

  # Inferred EIP-6372 CLOCK_MODE(), will be either "mode=blocknumber&from=default" or "mode=timestamp"
  clockMode: ClockMode!

  # The proposal state
  state: ProposalState!

  # Vote count in support of the proposal
  forVotes: BigInt!

  # Vote count against the proposal
  againstVotes: BigInt!

  # Block when canceled
  canceledAtBlock: BigInt

  # Timestamp when canceled
  canceledAtTimestamp: BigInt

  # Block when queued
  queuedAtBlock: BigInt

  # Timestamp when queued
  queuedAtTimestamp: BigInt

  # Block when executed
  executedAtBlock: BigInt

  # Timestamp when executed
  executedAtTimestamp: BigInt

  # Timestamp when the proposal will be executable after being queued
  eta: BigInt
}

type ProposalVote @entity {
  # The concatenation of the Delegate.id and the Proposal.id
  id: Bytes!

  # The delegate that cast this proposal vote
  delegate: Delegate!
}

type GovernanceData @entity {
  id: Bytes!

  # The total MUSHI supply
  totalSupply: BigInt!

  # Total amount of created proposals
  proposalCount: BigInt!
}
